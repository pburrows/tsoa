basePath: /v1
consumes:
    - application/json
definitions:
    EnumIndexValue:
        description: EnumIndexValue.
        enum:
            - '0'
            - '1'
        type: string
    EnumNumberValue:
        description: EnumNumberValue.
        enum:
            - '2'
            - '5'
        type: string
    EnumStringValue:
        description: EnumStringValue.
        enum:
            - VALUE_1
            - VALUE_2
        type: string
    TestModel:
        description: 'This is a description of a model'
        properties:
            id:
                type: number
                format: double
            numberValue:
                type: number
                format: double
                description: 'This is a description of this model property, numberValue'
            numberArray:
                type: array
                items:
                    type: number
                    format: double
            stringValue:
                type: string
                format: password
            stringArray:
                type: array
                items:
                    type: string
            boolValue:
                type: boolean
            boolArray:
                type: array
                items:
                    type: boolean
            enumValue:
                $ref: '#/definitions/EnumIndexValue'
                x-nullable: true
            enumArray:
                type: array
                items:
                    $ref: '#/definitions/EnumIndexValue'
                x-nullable: true
            enumNumberValue:
                $ref: '#/definitions/EnumNumberValue'
                x-nullable: true
            enumNumberArray:
                type: array
                items:
                    $ref: '#/definitions/EnumNumberValue'
                x-nullable: true
            enumStringValue:
                $ref: '#/definitions/EnumStringValue'
                x-nullable: true
            enumStringArray:
                type: array
                items:
                    $ref: '#/definitions/EnumStringValue'
                x-nullable: true
            modelValue:
                $ref: '#/definitions/TestSubModel'
            modelsArray:
                type: array
                items:
                    $ref: '#/definitions/TestSubModel'
            strLiteralVal:
                type: string
                enum:
                    - Foo
                    - Bar
            strLiteralArr:
                type: array
                items:
                    type: string
                    enum:
                        - Foo
                        - Bar
            unionPrimetiveType:
                type: string
                enum:
                    - String
                    - '1'
                    - '20'
                    - 'true'
                    - 'false'
                x-nullable: true
            dateValue:
                type: string
                format: date-time
                x-nullable: true
            optionalString:
                type: string
                x-nullable: true
            anyType:
                type: object
                x-nullable: true
            modelsObjectIndirect:
                $ref: '#/definitions/TestSubModelContainer'
                x-nullable: true
            modelsObjectIndirectNS:
                $ref: '#/definitions/TestSubModelContainerNamespace.TestSubModelContainer'
                x-nullable: true
            modelsObjectIndirectNS2:
                $ref: '#/definitions/TestSubModelContainerNamespace.InnerNamespace.TestSubModelContainer2'
                x-nullable: true
            modelsObjectIndirectNS_Alias:
                $ref: '#/definitions/TestSubModelContainerNamespace_TestSubModelContainer'
                x-nullable: true
            modelsObjectIndirectNS2_Alias:
                $ref: '#/definitions/TestSubModelContainerNamespace_InnerNamespace_TestSubModelContainer2'
                x-nullable: true
            modelsArrayIndirect:
                $ref: '#/definitions/TestSubArrayModelContainer'
                x-nullable: true
            modelsEnumIndirect:
                $ref: '#/definitions/TestSubEnumModelContainer'
                x-nullable: true
            typeAliasCase1:
                $ref: '#/definitions/TypeAliasModelCase1'
                x-nullable: true
            TypeAliasCase2:
                $ref: '#/definitions/TypeAliasModelCase2'
                x-nullable: true
        required:
            - id
            - numberValue
            - numberArray
            - stringValue
            - stringArray
            - boolValue
            - boolArray
            - modelValue
            - modelsArray
            - strLiteralVal
            - strLiteralArr
        type: object
        example:
            boolArray:
                - true
                - false
            boolValue: true
            dateValue: '2018-06-25T15:45:00Z'
            id: 2
            modelValue:
                id: 3
                email: test(at)example.com
            modelsArray: []
            numberArray:
                - 1
                - 2
                - 3
            numberValue: 1
            optionalString: 'optional string'
            strLiteralArr:
                - Foo
                - Bar
            strLiteralVal: Foo
            stringArray:
                - 'string one'
                - 'string two'
            stringValue: 'a string'
    TestSubModel:
        properties:
            id:
                type: number
                format: double
            email:
                type: string
            circular:
                $ref: '#/definitions/TestModel'
                x-nullable: true
        required:
            - id
            - email
        type: object
    TestSubModel2:
        properties:
            id:
                type: number
                format: double
            email:
                type: string
            circular:
                $ref: '#/definitions/TestModel'
                x-nullable: true
            testSubModel2:
                type: boolean
        required:
            - id
            - email
            - testSubModel2
        type: object
    TestSubModelContainer:
        properties: {}
        type: object
        additionalProperties:
            $ref: '#/definitions/TestSubModel2'
    TestSubModelNamespace.TestSubModelNS:
        properties:
            id:
                type: number
                format: double
            email:
                type: string
            circular:
                $ref: '#/definitions/TestModel'
                x-nullable: true
            testSubModelNS:
                type: boolean
        required:
            - id
            - email
            - testSubModelNS
        type: object
    TestSubModelContainerNamespace.TestSubModelContainer:
        properties: {}
        type: object
        additionalProperties:
            $ref: '#/definitions/TestSubModelNamespace.TestSubModelNS'
    TestSubModelContainerNamespace.InnerNamespace.TestSubModelContainer2:
        properties: {}
        type: object
        additionalProperties:
            $ref: '#/definitions/TestSubModelNamespace.TestSubModelNS'
    TestSubModelContainerNamespace_TestSubModelContainer:
        properties: {}
        type: object
    TestSubModelContainerNamespace_InnerNamespace_TestSubModelContainer2:
        properties: {}
        type: object
    TestSubArrayModelContainer:
        properties: {}
        type: object
        additionalProperties:
            type: array
            items:
                $ref: '#/definitions/TestSubModel2'
    TestSubEnumModelContainer:
        properties: {}
        type: object
        additionalProperties:
            $ref: '#/definitions/EnumStringValue'
    TypeAliasModelCase1:
        properties:
            value1:
                type: string
            value2:
                type: string
        required:
            - value1
            - value2
        type: object
    TypeAliasModelCase2:
        properties:
            value1:
                type: string
            value2:
                type: string
            value3:
                type: string
        required:
            - value1
            - value2
            - value3
        type: object
    Account:
        properties:
            id:
                type: number
                format: double
        required:
            - id
        type: object
    TestClassModel:
        description: 'This is a description of TestClassModel'
        properties:
            id:
                type: number
                format: double
            defaultValue1:
                type: string
                default: 'Default Value 1'
                x-nullable: true
            account:
                $ref: '#/definitions/Account'
            defaultValue2:
                type: string
                default: 'Default Value 2'
                x-nullable: true
            publicStringProperty:
                type: string
                description: 'This is a description of a public string property'
                minLength: 3
                maxLength: 20
                pattern: '^[a-zA-Z]+$'
            optionalPublicStringProperty:
                type: string
                minLength: 0
                maxLength: 10
                x-nullable: true
            emailPattern:
                type: string
                description: 'a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$'
                format: email
                pattern: '^[a-zA-Z0-9_.+-]+'
                x-nullable: true
            stringProperty:
                type: string
            typeLiterals:
                type: object
                default:
                    booleanTypeLiteral: {}
                    numberTypeLiteral: {}
                    stringTypeLiteral: {}
                x-nullable: true
            publicConstructorVar:
                type: string
                description: 'This is a description for publicConstructorVar'
            optionalPublicConstructorVar:
                type: string
                x-nullable: true
        required:
            - id
            - account
            - publicStringProperty
            - stringProperty
            - publicConstructorVar
        type: object
    Result:
        properties:
            value:
                type: string
                enum:
                    - success
                    - failure
        required:
            - value
        type: object
    GenericModelTestModel:
        properties:
            result:
                $ref: '#/definitions/TestModel'
        required:
            - result
        type: object
    'GenericModelTestModel[]':
        properties:
            result:
                type: array
                items:
                    $ref: '#/definitions/TestModel'
        required:
            - result
        type: object
    GenericModelstring:
        properties:
            result:
                type: string
        required:
            - result
        type: object
    'GenericModelstring[]':
        properties:
            result:
                type: array
                items:
                    type: string
        required:
            - result
        type: object
    GenericRequestTestModel:
        properties:
            name:
                type: string
            value:
                $ref: '#/definitions/TestModel'
        required:
            - name
            - value
        type: object
    ErrorResponseModel:
        properties:
            status:
                type: number
                format: double
            message:
                type: string
        required:
            - status
            - message
        type: object
    Gender:
        description: 'Gender msg'
        enum:
            - MALE
            - FEMALE
        type: string
    ParameterTestModel:
        properties:
            firstname:
                type: string
            lastname:
                type: string
            age:
                type: number
                format: double
                minimum: 1
                maximum: 100
            weight:
                type: number
                format: double
            human:
                type: boolean
            gender:
                $ref: '#/definitions/Gender'
        required:
            - firstname
            - lastname
            - age
            - weight
            - human
            - gender
        type: object
    UserResponseModel:
        properties:
            id:
                type: number
                format: double
            name:
                type: string
        required:
            - id
            - name
        type: object
    ValidateDateResponse:
        properties:
            minDateValue:
                type: string
                format: date-time
            maxDateValue:
                type: string
                format: date-time
        required:
            - minDateValue
            - maxDateValue
        type: object
    ValidateNumberResponse:
        properties:
            minValue:
                type: number
                format: double
            maxValue:
                type: number
                format: double
        required:
            - minValue
            - maxValue
        type: object
    ValidateBooleanResponse:
        properties:
            boolValue:
                type: boolean
        required:
            - boolValue
        type: object
    ValidateStringResponse:
        properties:
            minLength:
                type: string
            maxLength:
                type: string
            patternValue:
                type: string
        required:
            - minLength
            - maxLength
            - patternValue
        type: object
    ValidateModel:
        properties:
            floatValue:
                type: number
                format: float
            doubleValue:
                type: number
                format: double
            intValue:
                type: integer
                format: int32
            longValue:
                type: integer
                format: int64
            booleanValue:
                type: boolean
            arrayValue:
                type: array
                items:
                    type: number
                    format: double
            dateValue:
                type: string
                format: date
            datetimeValue:
                type: string
                format: date-time
            numberMax10:
                type: number
                format: double
                maximum: 10
            numberMin5:
                type: number
                format: double
                minimum: 5
            stringMax10Lenght:
                type: string
                maxLength: 10
            stringMin5Lenght:
                type: string
                minLength: 5
            stringPatternAZaz:
                type: string
                pattern: '^[a-zA-Z]+$'
            arrayMax5Item:
                type: array
                items:
                    type: number
                    format: double
                maxItems: 5
            arrayMin2Item:
                type: array
                items:
                    type: number
                    format: double
                minItems: 2
            arrayUniqueItem:
                type: array
                items:
                    type: number
                    format: double
        required:
            - floatValue
            - doubleValue
            - intValue
            - longValue
            - booleanValue
            - arrayValue
            - dateValue
            - datetimeValue
            - numberMax10
            - numberMin5
            - stringMax10Lenght
            - stringMin5Lenght
            - stringPatternAZaz
            - arrayMax5Item
            - arrayMin2Item
            - arrayUniqueItem
        type: object
info:
    title: tsoa
    version: 2.1.9
    description: 'Build swagger-compliant REST APIs using TypeScript and Node'
    license:
        name: MIT
paths:
    /:
        get:
            operationId: RootHandler
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /rootControllerMethodWithPath:
        get:
            operationId: RootControllerMethodWithPath
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /DeleteTest:
        delete:
            operationId: DeleteWithReturnValue
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /DeleteTest/Current:
        delete:
            operationId: DeleteCurrent
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters: []
    '/DeleteTest/{numberPathParam}/{booleanPathParam}/{stringPathParam}':
        delete:
            operationId: GetModelByParams
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: path
                    name: numberPathParam
                    required: true
                    format: double
                    type: number
                -
                    in: path
                    name: stringPathParam
                    required: true
                    type: string
                -
                    in: path
                    name: booleanPathParam
                    required: true
                    type: boolean
                -
                    in: query
                    name: booleanParam
                    required: true
                    type: boolean
                -
                    in: query
                    name: stringParam
                    required: true
                    type: string
                -
                    in: query
                    name: numberParam
                    required: true
                    format: double
                    type: number
    /GetTest:
        get:
            operationId: GetModel
            produces:
                - application/json
            responses:
                '200':
                    description: 'Returns TestModel'
                    schema:
                        $ref: '#/definitions/TestModel'
                    examples:
                        application/json:
                            boolArray:
                                - true
                                - false
                            boolValue: true
                            dateValue: '2018-09-04T17:20:39.267Z'
                            id: 1
                            modelValue:
                                email: test@test.com
                                id: 100
                            numberArray:
                                - 1
                                - 2
                                - 3
                            numberValue: 1
                            optionalString: 'optional string'
                            strLiteralArr:
                                - Foo
                                - Bar
                            strLiteralVal: Foo
                            stringArray:
                                - 'string one'
                                - 'string two'
                            stringValue: 'a string'
            description: "This is a description of the getModel method\r\nthis is some more text on another line"
            security: []
            parameters: []
    /GetTest/Current:
        get:
            operationId: GetCurrentModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /GetTest/ClassModel:
        get:
            operationId: GetClassModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestClassModel'
            security: []
            parameters: []
    /GetTest/Multi:
        get:
            operationId: GetMultipleModels
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    '/GetTest/{numberPathParam}/{booleanPathParam}/{stringPathParam}':
        get:
            operationId: GetModelByParams
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    description: 'This is a description for numberPathParam'
                    in: path
                    name: numberPathParam
                    required: true
                    format: double
                    type: number
                    minimum: 1
                    maximum: 10
                -
                    in: path
                    name: stringPathParam
                    required: true
                    type: string
                    minLength: 1
                    maxLength: 10
                -
                    in: path
                    name: booleanPathParam
                    required: true
                    type: boolean
                -
                    in: query
                    name: booleanParam
                    required: true
                    type: boolean
                -
                    in: query
                    name: stringParam
                    required: true
                    type: string
                    minLength: 3
                    maxLength: 10
                -
                    description: 'This is a description for numberParam'
                    in: query
                    name: numberParam
                    required: true
                    format: double
                    type: number
                -
                    default: ""
                    in: query
                    name: optionalStringParam
                    required: false
                    type: string
    /GetTest/ResponseWithUnionTypeProperty:
        get:
            operationId: GetResponseWithUnionTypeProperty
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/Result'
            security: []
            parameters: []
    /GetTest/UnionTypeResponse:
        get:
            operationId: GetUnionTypeResponse
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
            security: []
            parameters: []
    /GetTest/Request:
        get:
            operationId: GetRequest
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /GetTest/DateParam:
        get:
            operationId: GetByDataParam
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: query
                    name: date
                    required: true
                    format: date-time
                    type: string
    /GetTest/ThrowsError:
        get:
            operationId: GetThrowsError
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /GetTest/GeneratesTags:
        get:
            operationId: GetGeneratesTags
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            tags:
                - test
                - test-two
            security: []
            parameters: []
    /GetTest/HandleBufferType:
        get:
            operationId: GetBuffer
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: string
                        format: byte
            security: []
            parameters:
                -
                    in: query
                    name: buffer
                    required: true
                    format: byte
                    type: string
    /GetTest/GenericModel:
        get:
            operationId: GetGenericModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/GenericModelTestModel'
            security: []
            parameters: []
    /GetTest/GenericModelArray:
        get:
            operationId: GetGenericModelArray
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/GenericModelTestModel[]'
            security: []
            parameters: []
    /GetTest/GenericPrimitive:
        get:
            operationId: GetGenericPrimitive
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/GenericModelstring'
            security: []
            parameters: []
    /GetTest/GenericPrimitiveArray:
        get:
            operationId: GetGenericPrimitiveArray
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/GenericModelstring[]'
            security: []
            parameters: []
    /PatchTest:
        patch:
            operationId: PatchModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
    /PatchTest/Location:
        patch:
            operationId: PatchModelAtLocation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /PatchTest/Multi:
        patch:
            operationId: PatchWithMultiReturn
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    '/PatchTest/WithId/{id}':
        patch:
            operationId: PatchWithId
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    format: double
                    type: number
    /PostTest:
        post:
            operationId: PostModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
        patch:
            operationId: UpdateModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
    /PostTest/WithDifferentReturnCode:
        post:
            operationId: PostWithDifferentReturnCode
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
    /PostTest/WithClassModel:
        post:
            operationId: PostClassModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestClassModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestClassModel'
    /PostTest/Location:
        post:
            operationId: PostModelAtLocation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /PostTest/Multi:
        post:
            operationId: PostWithMultiReturn
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    '/PostTest/WithId/{id}':
        post:
            operationId: PostWithId
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    format: double
                    type: number
    /PostTest/WithBodyAndQueryParams:
        post:
            operationId: PostWithBodyAndQueryParams
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
                -
                    in: query
                    name: query
                    required: true
                    type: string
    /PostTest/GenericBody:
        post:
            operationId: GetGenericRequest
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: genericReq
                    required: true
                    schema:
                        $ref: '#/definitions/GenericRequestTestModel'
    /PutTest:
        put:
            operationId: PutModel
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: body
                    name: model
                    required: true
                    schema:
                        $ref: '#/definitions/TestModel'
    /PutTest/Location:
        put:
            operationId: PutModelAtLocation
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /PutTest/Multi:
        put:
            operationId: PutWithMultiReturn
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    '/PutTest/WithId/{id}':
        put:
            operationId: PutWithId
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters:
                -
                    in: path
                    name: id
                    required: true
                    format: double
                    type: number
    /MethodTest/Get:
        get:
            operationId: GetMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /MethodTest/Post:
        post:
            operationId: PostMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /MethodTest/Patch:
        patch:
            operationId: PatchMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /MethodTest/Put:
        put:
            operationId: PutMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /MethodTest/Delete:
        delete:
            operationId: DeleteMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /MethodTest/Description:
        get:
            operationId: Description
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            description: 'method description'
            security: []
            parameters: []
    /MethodTest/Tags:
        get:
            operationId: Tags
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            tags:
                - Tag1
                - Tag2
                - Tag3
            security: []
            parameters: []
    /MethodTest/MultiResponse:
        get:
            operationId: MultiResponse
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
                '400':
                    description: 'Bad Request'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
                '401':
                    description: Unauthorized
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
                default:
                    description: 'Unexpected error'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security: []
            parameters: []
    /MethodTest/SuccessResponse:
        get:
            operationId: SuccessResponse
            produces:
                - application/json
            responses:
                '201':
                    description: Created
            security: []
            parameters: []
    /MethodTest/ApiSecurity:
        get:
            operationId: ApiSecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security:
                -
                    api_key: []
            parameters: []
    /MethodTest/OauthSecurity:
        get:
            operationId: OauthSecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security:
                -
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
            parameters: []
    /MethodTest/OauthOrAPIkeySecurity:
        get:
            operationId: OauthOrAPIkeySecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security:
                -
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
                -
                    api_key: []
            parameters: []
    /MethodTest/OauthAndAPIkeySecurity:
        get:
            operationId: OauthAndAPIkeySecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security:
                -
                    api_key: []
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
            parameters: []
    /MethodTest/DeprecatedMethod:
        get:
            operationId: DeprecatedMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            deprecated: true
            security: []
            parameters: []
    /MethodTest/SummaryMethod:
        get:
            operationId: SummaryMethod
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            summary: 'simple summary'
            security: []
            parameters: []
    /MethodTest/returnAnyType:
        get:
            operationId: ReturnAnyType
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: object
            security: []
            parameters: []
    /ParameterTest/Query:
        get:
            operationId: GetQuery
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            description: 'Get test paramater'
            security: []
            parameters:
                -
                    description: 'Firstname description'
                    in: query
                    name: firstname
                    required: true
                    type: string
                -
                    description: 'Lastname description'
                    in: query
                    name: last_name
                    required: true
                    type: string
                -
                    description: 'Age description'
                    in: query
                    name: age
                    required: true
                    format: int32
                    type: integer
                -
                    description: 'Weight description'
                    in: query
                    name: weight
                    required: true
                    format: float
                    type: number
                -
                    description: 'Human description'
                    in: query
                    name: human
                    required: true
                    type: boolean
                -
                    description: 'Gender description'
                    in: query
                    name: gender
                    required: true
                    type: string
                    enum:
                        - MALE
                        - FEMALE
    '/ParameterTest/Path/{firstname}/{last_name}/{age}/{weight}/{human}/{gender}':
        get:
            operationId: GetPath
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            description: 'Path test paramater'
            security: []
            parameters:
                -
                    description: 'Firstname description'
                    in: path
                    name: firstname
                    required: true
                    type: string
                -
                    description: 'Lastname description'
                    in: path
                    name: last_name
                    required: true
                    type: string
                -
                    description: 'Age description'
                    in: path
                    name: age
                    required: true
                    format: int32
                    type: integer
                -
                    description: 'Weight description'
                    in: path
                    name: weight
                    required: true
                    format: float
                    type: number
                -
                    description: 'Human description'
                    in: path
                    name: human
                    required: true
                    type: boolean
                -
                    description: 'Gender description'
                    in: path
                    name: gender
                    required: true
                    type: string
                    enum:
                        - MALE
                        - FEMALE
    /ParameterTest/Header:
        get:
            operationId: GetHeader
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            description: 'Header test paramater'
            security: []
            parameters:
                -
                    description: 'Firstname description'
                    in: header
                    name: firstname
                    required: true
                    type: string
                -
                    description: 'Lastname description'
                    in: header
                    name: last_name
                    required: true
                    type: string
                -
                    description: 'Age description'
                    in: header
                    name: age
                    required: true
                    format: int32
                    type: integer
                -
                    description: 'Weight description'
                    in: header
                    name: weight
                    required: true
                    format: float
                    type: number
                -
                    description: 'Human description'
                    in: header
                    name: human
                    required: true
                    type: boolean
                -
                    description: 'Gender description'
                    in: header
                    name: gender
                    required: true
                    type: string
                    enum:
                        - MALE
                        - FEMALE
    /ParameterTest/Request:
        get:
            operationId: GetRequest
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            description: 'Request test paramater'
            security: []
            parameters: []
    /ParameterTest/Body:
        post:
            operationId: GetBody
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            description: 'Body test paramater'
            security: []
            parameters:
                -
                    description: 'Body description'
                    in: body
                    name: body
                    required: true
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
    /ParameterTest/BodyProps:
        post:
            operationId: GetBodyProps
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ParameterTestModel'
            security: []
            parameters:
                -
                    in: body
                    name: body
                    schema:
                        properties:
                            firstname:
                                type: string
                                description: 'firstname description'
                            lastname:
                                type: string
                                description: 'lastname description'
                            age:
                                type: integer
                                format: int32
                                description: 'age description'
                            weight:
                                type: number
                                format: float
                                description: 'weight description'
                            human:
                                type: boolean
                                description: 'human description'
                            gender:
                                $ref: '#/definitions/Gender'
                                description: 'Gender description'
                        title: GetBodyPropsBody
                        type: object
                        required:
                            - firstname
                            - lastname
                            - age
                            - weight
                            - human
                            - gender
    /ParameterTest/ParamaterQueyAnyType:
        get:
            operationId: QueryAnyType
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: query
                    name: name
                    required: true
                    type: string
    /ParameterTest/ParamaterQueyArray:
        post:
            operationId: QueyArray
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: query
                    name: name
                    required: true
                    type: array
                    items:
                        type: string
    /ParameterTest/ParamaterBodyAnyType:
        post:
            operationId: BodyAnyType
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: body
                    name: body
                    required: true
                    schema:
                        type: object
    /ParameterTest/ParamaterBodyArrayType:
        post:
            operationId: BodyArrayType
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: body
                    name: body
                    required: true
                    schema:
                        items:
                            $ref: '#/definitions/ParameterTestModel'
                        type: array
    /ParameterTest/ParamaterImplicitString:
        get:
            operationId: ImplicitString
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default: 'Iron man'
                    in: query
                    name: name
                    required: false
                    type: string
    /ParameterTest/ParamaterImplicitNumber:
        get:
            operationId: ImplicitNumber
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default: 40
                    in: query
                    name: age
                    required: false
                    format: double
                    type: number
    /ParameterTest/ParamaterImplicitEnum:
        get:
            operationId: ImplicitEnum
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: query
                    name: gender
                    required: false
                    type: string
                    enum:
                        - MALE
                        - FEMALE
    /ParameterTest/ParamaterImplicitStringArray:
        get:
            operationId: ImplicitStringArray
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default:
                        - V1
                        - V2
                    in: query
                    name: arr
                    required: false
                    type: array
                    items:
                        type: string
    /ParameterTest/paramaterImplicitNumberArray:
        get:
            operationId: ImplicitNumberArray
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default:
                        - 1
                        - 2
                        - 3
                    in: query
                    name: arr
                    required: false
                    type: array
                    items:
                        type: number
                        format: double
    /ParameterTest/paramaterImplicitDateTime:
        get:
            operationId: ImplicitDateTime
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default: '2017-01-01T00:00:00.000Z'
                    in: query
                    name: date
                    required: false
                    format: date-time
                    type: string
    /ParameterTest/paramaterImplicitDate:
        get:
            operationId: ImplicitDate
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    default: '2018-01-15'
                    in: query
                    name: date
                    required: false
                    format: date
                    type: string
    /SecurityTest:
        get:
            operationId: GetWithApi
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/UserResponseModel'
                default:
                    description: 'Unexpected error'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security:
                -
                    api_key: []
            parameters: []
    /SecurityTest/Koa:
        get:
            operationId: GetWithApiForKoa
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/UserResponseModel'
                default:
                    description: 'Unexpected error'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security:
                -
                    api_key: []
            parameters: []
    /SecurityTest/Oauth:
        get:
            operationId: GetWithSecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/UserResponseModel'
                '404':
                    description: 'Not Found'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security:
                -
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
            parameters: []
    /SecurityTest/OauthOrAPIkey:
        get:
            operationId: GetWithOrSecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/UserResponseModel'
                '404':
                    description: 'Not Found'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security:
                -
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
                -
                    api_key: []
            parameters: []
    /SecurityTest/OauthAndAPIkey:
        get:
            operationId: GetWithAndSecurity
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/UserResponseModel'
                '404':
                    description: 'Not Found'
                    schema:
                        $ref: '#/definitions/ErrorResponseModel'
            security:
                -
                    api_key: []
                    tsoa_auth:
                        - 'write:pets'
                        - 'read:pets'
            parameters: []
    /Controller/normalStatusCode:
        get:
            operationId: NormalStatusCode
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /Controller/noContentStatusCode:
        get:
            operationId: NoContentStatusCode
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters: []
    /Controller/falseStatusCode:
        get:
            operationId: FalseStatusCode
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        type: boolean
            security: []
            parameters: []
    /Controller/customStatusCode:
        get:
            operationId: CustomNomalStatusCode
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/TestModel'
            security: []
            parameters: []
    /Controller/customHeader:
        get:
            operationId: CustomHeader
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters: []
    /Validate/parameter/date:
        get:
            operationId: DateValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateDateResponse'
            security: []
            parameters:
                -
                    in: query
                    name: minDateValue
                    required: true
                    format: date
                    type: string
                -
                    in: query
                    name: maxDateValue
                    required: true
                    format: date
                    type: string
    /Validate/parameter/datetime:
        get:
            operationId: DateTimeValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateDateResponse'
            security: []
            parameters:
                -
                    in: query
                    name: minDateValue
                    required: true
                    format: date-time
                    type: string
                -
                    in: query
                    name: maxDateValue
                    required: true
                    format: date-time
                    type: string
    /Validate/parameter/integer:
        get:
            operationId: LongValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateNumberResponse'
            security: []
            parameters:
                -
                    in: query
                    name: minValue
                    required: true
                    format: int32
                    type: integer
                    minimum: 5
                -
                    in: query
                    name: maxValue
                    required: true
                    format: int32
                    type: integer
                    maximum: 3
    /Validate/parameter/float:
        get:
            operationId: DoubleValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateNumberResponse'
            security: []
            parameters:
                -
                    in: query
                    name: minValue
                    required: true
                    format: float
                    type: number
                    minimum: 5.5
                -
                    in: query
                    name: maxValue
                    required: true
                    format: float
                    type: number
                    maximum: 3.5
    /Validate/parameter/boolean:
        get:
            operationId: BooleanValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateBooleanResponse'
            security: []
            parameters:
                -
                    in: query
                    name: boolValue
                    required: true
                    type: boolean
    /Validate/parameter/string:
        get:
            operationId: StringValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateStringResponse'
            security: []
            parameters:
                -
                    in: query
                    name: minLength
                    required: true
                    type: string
                    minLength: 5
                -
                    in: query
                    name: maxLength
                    required: true
                    type: string
                    maxLength: 3
                -
                    in: query
                    name: patternValue
                    required: true
                    type: string
                    pattern: '^[a-zA-Z]+$'
    /Validate/parameter/customRequiredErrorMsg:
        get:
            operationId: CustomRequiredErrorMsg
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: query
                    name: longValue
                    required: true
                    format: int64
                    type: integer
    /Validate/parameter/customInvalidErrorMsg:
        get:
            operationId: CustomInvalidErrorMsg
            produces:
                - application/json
            responses:
                '204':
                    description: 'No content'
            security: []
            parameters:
                -
                    in: query
                    name: longValue
                    required: true
                    format: int64
                    type: integer
    /Validate/body:
        post:
            operationId: BodyValidate
            produces:
                - application/json
            responses:
                '200':
                    description: Ok
                    schema:
                        $ref: '#/definitions/ValidateModel'
            security: []
            parameters:
                -
                    in: body
                    name: body
                    required: true
                    schema:
                        $ref: '#/definitions/ValidateModel'
produces:
    - application/json
swagger: '2.0'
securityDefinitions:
    api_key:
        type: apiKey
        name: access_token
        in: query
    tsoa_auth:
        type: oauth2
        authorizationUrl: 'http://swagger.io/api/oauth/dialog'
        flow: implicit
        scopes:
            'write:pets': 'modify things'
            'read:pets': 'read things'
host: 'localhost:3000'
